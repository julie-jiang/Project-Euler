'''
P12: Highly Divisible Triangular Number
    The sequence of triangle numbers is generated by adding the natural numbers. 
    So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
    The first ten terms would be:
        1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
    Let us list the factors of the first seven triangle numbers:
        1: 1
        3: 1,3
        6: 1,2,3,6
        10: 1,2,5,10
        15: 1,3,5,15
        21: 1,3,7,21
        28: 1,2,4,7,14,28
    We can see that 28 is the first triangle number to have over five divisors.
    What is the value of the first triangle number to have over five hundred 
    divisors?
'''
def answer():
    for num in generate_triangular_number():
        if num_divisors(num) >= 500:
            return num
            
def num_divisors(number):
    divisors = 0
    for n in range(1, int(number ** 0.5) + 1):
        if number % n == 0:
            divisors += 1
    return divisors * 2
    
def generate_triangular_number():
    natural_num = 0
    sum_ = 0
    while True:
        natural_num +=1
        sum_ += natural_num
        yield sum_
        
if __name__ == "__main__":
    print answer() # 76576500
        
